apply plugin: 'com.android.application'
apply plugin: 'com.neenbedankt.android-apt'
apply plugin: 'android-apt'

android {
    compileSdkVersion 25
    buildToolsVersion "25.0.3"
    defaultConfig {
        applicationId "com.video.youtuberplayer"
        minSdkVersion 15
        targetSdkVersion 25
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        buildConfigField 'String[]', 'YOUTUBE_API_KEYS',
                '{' +
                        '"AIzaSyCchJsFlWeyxi4MgKj5rudYgNR18Q0HIXU"' +
                        '}';
        vectorDrawables.useSupportLibrary true
        multiDexEnabled true
    }

    signingConfigs {
        mainConfig {
            keyAlias 'hoang hiep'
            keyPassword '1caigithe'
            storeFile file('../keys.jks')
            storePassword '1caigithe'
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.mainConfig
        }
        debug {
            signingConfig signingConfigs.mainConfig
        }
    }

    android.applicationVariants.all{ variant ->
        variant.mergeAssets.doLast {
            File fonts = file("$variant.mergeAssets.outputDir/fonts")
            if (fonts.exists()) {
                for (File file : fonts.listFiles()) {
                    if (file.getName().contains("RobotoSlab") || file.getName().contains("Roboto-BlackItalic") ||
                            file.getName().contains("Roboto-BoldItalic") || file.getName().contains("Roboto-Italic") ||
                            file.getName().contains("Roboto-LightItalic") || file.getName().contains("Roboto-MediumItalic") ||
                            file.getName().contains("Roboto-Regular") || file.getName().contains("Roboto-ThinItalic") ||
                            file.getName().contains("RobotoCondensed-BoldItalic") || file.getName().contains("RobotoCondensed-Italic") ||
                            file.getName().contains("RobotoCondensed-LightItalic") || file.getName().contains("RobotoMono-BoldItalic") ||
                            file.getName().contains("RobotoMono-Italic") || file.getName().contains("RobotoMono-LightItalic") ||
                            file.getName().contains("RobotoMono-MediumItalic") || file.getName().contains("RobotoMono-Regular") ||
                            file.getName().contains("RobotoMono-ThinItalic")) {
                        println("delete " + file.getName() + " font")
                        file.delete()
                    };
                }
            }
        }
    }
}

dependencies {
    testCompile 'junit:junit:4.12'
    compile fileTree(include: ['*.jar'], dir: 'libs')
    compile 'com.android.support:appcompat-v7:25.3.1'
    compile 'com.android.support:design:25.3.1'
    compile 'com.android.support:recyclerview-v7:25.3.1'
    compile 'com.android.support:gridlayout-v7:25.3.1'
    compile 'com.android.support:cardview-v7:25.3.1'
    compile 'com.balysv:material-ripple:1.0.2'
    compile 'com.github.johnkil.android-robototextview:robototextview:3.0.0'
    compile 'org.ocpsoft.prettytime:prettytime:3.2.7.Final'
    compile 'com.google.android.gms:play-services-auth:10.2.4'
    compile 'pub.devrel:easypermissions:0.3.0'
    compile('com.google.api-client:google-api-client-android:1.22.0') {
        exclude group: 'org.apache.httpcomponents'
    }
    compile('com.google.apis:google-api-services-youtube:v3-rev183-1.22.0') {
        exclude group: 'org.apache.httpcomponents'
    }
    compile 'org.jsoup:jsoup:1.8.3'
    compile 'org.mozilla:rhino:1.7.7'
    compile 'com.github.bumptech.glide:glide:3.7.0'
    compile 'com.android.support:multidex:1.0.1'
    compile 'com.google.code.gson:gson:2.7'
    compile 'com.jakewharton:butterknife:8.5.1'
    apt 'com.jakewharton:butterknife-compiler:8.5.1'
    compile 'joda-time:joda-time:2.3'
    compile 'com.tuyenmonkey:mkloader:1.2.0'
}
